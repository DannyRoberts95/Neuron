{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dan/Documents/Coding/blog/web/pages/index.js\";\n// index.js\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\nimport React from \"react\"; // import \"fullpage.js/vend ors/scrolloverflow\"; // Optional. When using scrollOverflow:true\n\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  const {\n    projects = []\n  } = props;\n  const postLinks = posts.map(({\n    _id,\n    title = \"\",\n    slug = \"\",\n    _updatedAt = \"\"\n  }) => slug && /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/post/[slug]\",\n      as: `/post/${slug.current}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\"]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this));\n  const projectLinks = projects.map(({\n    _id,\n    title = \"\",\n    slug = \"\",\n    _updatedAt = \"\"\n  }) => slug && /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/project/[slug]\",\n      as: `/project/${slug.current}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\"]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(ReactFullpage // scrollOverflow={true}\n  , {\n    sectionsColor: [\"orange\", \"purple\", \"green\"] // onLeave={this.onLeave.bind(this)}\n    // afterLoad={this.afterLoad.bind(this)}\n    ,\n    render: ({\n      state,\n      fullpageApi\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fullpage-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: projectLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: postLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Section 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fullpageApi.moveTo(1, 0),\n            children: \"Move top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n  projects: await client.fetch(groq`\n      *[_type == \"project\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;","map":{"version":3,"sources":["/Users/dan/Documents/Coding/blog/web/pages/index.js"],"names":["Link","groq","client","React","ReactFullpage","Index","props","posts","projects","postLinks","map","_id","title","slug","_updatedAt","current","Date","toDateString","projectLinks","state","fullpageApi","moveTo","getInitialProps","fetch"],"mappings":"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","sourcesContent":["// index.js\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nimport React from \"react\";\n// import \"fullpage.js/vend ors/scrolloverflow\"; // Optional. When using scrollOverflow:true\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nconst Index = (props) => {\n  const { posts = [] } = props;\n  const { projects = [] } = props;\n\n  const postLinks = posts.map(\n    ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n      slug && (\n        <li key={_id}>\n          <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n            <a>{title}</a>\n          </Link>{\" \"}\n          ({new Date(_updatedAt).toDateString()})\n        </li>\n      )\n  );\n\n  const projectLinks = projects.map(\n    ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n      slug && (\n        <li key={_id}>\n          <Link href=\"/project/[slug]\" as={`/project/${slug.current}`}>\n            <a>{title}</a>\n          </Link>{\" \"}\n          ({new Date(_updatedAt).toDateString()})\n        </li>\n      )\n  );\n\n  return (\n    <ReactFullpage\n      // scrollOverflow={true}\n      sectionsColor={[\"orange\", \"purple\", \"green\"]}\n      // onLeave={this.onLeave.bind(this)}\n      // afterLoad={this.afterLoad.bind(this)}\n      render={({ state, fullpageApi }) => {\n        return (\n          <div id=\"fullpage-wrapper\">\n            <div className=\"section\">{projectLinks}</div>\n            <div className=\"section\">{postLinks}</div>\n            <div className=\"section\">\n              <h3>Section 3</h3>\n              <button onClick={() => fullpageApi.moveTo(1, 0)}>Move top</button>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n  projects: await client.fetch(groq`\n      *[_type == \"project\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n});\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}