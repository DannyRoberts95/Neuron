{
    "ast": null,
    "code": "import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dan/Documents/Coding/blog/web/pages/index.js\";\n// index.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nconst Index = props => {\n  console.log(props);\n  const {\n    posts = []\n  } = props;\n  const {\n    projects = []\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), posts.map(({\n      _id,\n      title = '',\n      slug = '',\n      _updatedAt = ''\n    }) => slug && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/post/[slug]\",\n        as: `/post/${slug.current}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\"]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), projects.map(({\n      _id,\n      title = '',\n      slug = '',\n      _updatedAt = ''\n    }) => slug && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/project/[slug]\",\n        as: `/project/${slug.current}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\"]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n  projects: await client.fetch(groq`\n      *[_type == \"project\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;",
    "map": {
        "version": 3,
        "sources": ["/Users/dan/Documents/Coding/blog/web/pages/index.js"],
        "names": [
            "Link",
            "groq",
            "client",
            "Index",
            "props",
            "console",
            "log",
            "posts",
            "projects",
            "map",
            "_id",
            "title",
            "slug",
            "_updatedAt",
            "current",
            "Date",
            "toDateString",
            "getInitialProps",
            "fetch"
        ],
        "mappings": ";;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACE,QAAM;AAAEG,IAAAA,KAAK,GAAG;AAAV,MAAiBH,KAAvB;AACA,QAAM;AAAEI,IAAAA,QAAQ,GAAG;AAAb,MAAoBJ,KAA1B;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,KAAK,CAACE,GAAN,CACC,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,KAAK,GAAG,EAAf;AAAmBC,MAAAA,IAAI,GAAG,EAA1B;AAA8BC,MAAAA,UAAU,GAAG;AAA3C,KAAD,KACED,IAAI,iBACF;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,EAAE,EAAG,SAAQA,IAAI,CAACE,OAAQ,EAApD;AAAA,+BACE;AAAA,oBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ;AAAA,OAASN,GAAT;AAAA;AAAA;AAAA;AAAA,YAHL,CAFH,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcGF,QAAQ,CAACC,GAAT,CACC,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,KAAK,GAAG,EAAf;AAAmBC,MAAAA,IAAI,GAAG,EAA1B;AAA8BC,MAAAA,UAAU,GAAG;AAA3C,KAAD,KACED,IAAI,iBACF;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,iBAAX;AAA6B,QAAA,EAAE,EAAG,YAAWA,IAAI,CAACE,OAAQ,EAA1D;AAAA,+BACE;AAAA,oBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ;AAAA,OAASN,GAAT;AAAA;AAAA;AAAA;AAAA,YAHL,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH,CAhCD;;AAkCAP,KAAK,CAACc,eAAN,GAAwB,aAAa;AACjCV,EAAAA,KAAK,EAAE,MAAML,MAAM,CAACgB,KAAP,CAAajB,IAAK;AACnC;AACA,KAFiB,CADoB;AAIjCO,EAAAA,QAAQ,EAAE,MAAMN,MAAM,CAACgB,KAAP,CAAajB,IAAK;AACtC;AACA,KAFoB;AAJiB,CAAb,CAAxB;;AASA,eAAeE,KAAf",
        "sourcesContent": [
            "// index.js\nimport Link from 'next/link'\nimport groq from 'groq'\nimport client from '../client'\n\nconst Index = (props) => {\n  console.log(props)\n    const { posts = [] } = props\n    const { projects = [] } = props\n    return (\n      <div>\n        <h1>Posts</h1>\n        {posts.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n              <li key={_id}>\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                  <a>{title}</a>\n                </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n              </li>\n            )\n        )}\n        <h1>Projects</h1>\n        {projects.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n              <li key={_id}>\n                <Link href=\"/project/[slug]\" as={`/project/${slug.current}`}>\n                  <a>{title}</a>\n                </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n              </li>\n            )\n        )}\n      </div>\n    )\n}\n\nIndex.getInitialProps = async () => ({\n    posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n    projects: await client.fetch(groq`\n      *[_type == \"project\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n})\n\nexport default Index"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
