{
    "ast": null,
    "code": "// [slug].js\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  console.log(props);\n  return null;\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;",
    "map": {
        "version": 3,
        "sources": ["/Users/dan/Documents/Coding/blog/web/pages/post/[slug].js"],
        "names": [
            "groq",
            "imageUrlBuilder",
            "BlockContent",
            "client",
            "urlFor",
            "source",
            "image",
            "Post",
            "props",
            "console",
            "log",
            "query",
            "getInitialProps",
            "context",
            "slug",
            "fetch"
        ],
        "mappings": "AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOJ,eAAe,CAACE,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO,IAAP;AACD,CAHD;;AAKA,MAAMG,KAAK,GAAGX,IAAK,gDAAnB;;AAEAO,IAAI,CAACK,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMR,MAAM,CAACY,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAeP,IAAf",
        "sourcesContent": [
            "// [slug].js\nimport groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Post = (props) => {\n  console.log(props)\n  return null\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]`\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query\n  return await client.fetch(query, { slug })\n}\n\nexport default Post"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
