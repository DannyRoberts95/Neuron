{
    "ast": null,
    "code": "import _regeneratorRuntime from \"/Users/dan/Documents/Coding/blog/web/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/dan/Documents/Coding/blog/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/dan/Documents/Coding/blog/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dan/Documents/Coding/blog/web/pages/index.js\",\n    _this = this;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"project\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"post\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// index.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nvar Index = function Index(props) {\n  console.log(props);\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts;\n  var _props$projects = props.projects,\n      projects = _props$projects === void 0 ? [] : _props$projects;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this), posts.map(function (_ref) {\n      var _id = _ref._id,\n          _ref$title = _ref.title,\n          title = _ref$title === void 0 ? '' : _ref$title,\n          _ref$slug = _ref.slug,\n          slug = _ref$slug === void 0 ? '' : _ref$slug,\n          _ref$_updatedAt = _ref._updatedAt,\n          _updatedAt = _ref$_updatedAt === void 0 ? '' : _ref$_updatedAt;\n\n      return slug && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/post/[slug]\",\n          as: \"/post/\".concat(slug.current),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, _this), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\"]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, _this), projects.map(function (_ref2) {\n      var _id = _ref2._id,\n          _ref2$title = _ref2.title,\n          title = _ref2$title === void 0 ? '' : _ref2$title,\n          _ref2$slug = _ref2.slug,\n          slug = _ref2$slug === void 0 ? '' : _ref2$slug,\n          _ref2$_updatedAt = _ref2._updatedAt,\n          _updatedAt = _ref2$_updatedAt === void 0 ? '' : _ref2$_updatedAt;\n\n      return slug && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/project/[slug]\",\n          as: \"/project/\".concat(slug.current),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, _this), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\"]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(groq(_templateObject()));\n\n        case 2:\n          _context.t0 = _context.sent;\n          _context.next = 5;\n          return client.fetch(groq(_templateObject2()));\n\n        case 5:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0,\n            projects: _context.t1\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");",
    "map": {
        "version": 3,
        "sources": ["/Users/dan/Documents/Coding/blog/web/pages/index.js"],
        "names": [
            "Link",
            "groq",
            "client",
            "Index",
            "props",
            "console",
            "log",
            "posts",
            "projects",
            "map",
            "_id",
            "title",
            "slug",
            "_updatedAt",
            "current",
            "Date",
            "toDateString",
            "getInitialProps",
            "fetch"
        ],
        "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADuB,qBAEEA,KAFF,CAEbG,KAFa;AAAA,MAEbA,KAFa,6BAEL,EAFK;AAAA,wBAGKH,KAHL,CAGbI,QAHa;AAAA,MAGbA,QAHa,gCAGF,EAHE;AAIrB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGD,KAAK,CAACE,GAAN,CACC;AAAA,UAAGC,GAAH,QAAGA,GAAH;AAAA,4BAAQC,KAAR;AAAA,UAAQA,KAAR,2BAAgB,EAAhB;AAAA,2BAAoBC,IAApB;AAAA,UAAoBA,IAApB,0BAA2B,EAA3B;AAAA,iCAA+BC,UAA/B;AAAA,UAA+BA,UAA/B,gCAA4C,EAA5C;;AAAA,aACED,IAAI,iBACF;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,cAAX;AAA0B,UAAA,EAAE,kBAAWA,IAAI,CAACE,OAAhB,CAA5B;AAAA,iCACE;AAAA,sBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ;AAAA,SAASN,GAAT;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA,KADD,CAFH,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAcGF,QAAQ,CAACC,GAAT,CACC;AAAA,UAAGC,GAAH,SAAGA,GAAH;AAAA,8BAAQC,KAAR;AAAA,UAAQA,KAAR,4BAAgB,EAAhB;AAAA,6BAAoBC,IAApB;AAAA,UAAoBA,IAApB,2BAA2B,EAA3B;AAAA,mCAA+BC,UAA/B;AAAA,UAA+BA,UAA/B,iCAA4C,EAA5C;;AAAA,aACED,IAAI,iBACF;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,iBAAX;AAA6B,UAAA,EAAE,qBAAcA,IAAI,CAACE,OAAnB,CAA/B;AAAA,iCACE;AAAA,sBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ;AAAA,SAASN,GAAT;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA,KADD,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA4BH,CAhCD;;KAAMP,K;AAkCNA,KAAK,CAACc,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACPf,MAAM,CAACgB,KAAP,CAAajB,IAAb,oBADO;;AAAA;AAAA;AAAA;AAAA,iBAIJC,MAAM,CAACgB,KAAP,CAAajB,IAAb,qBAJI;;AAAA;AAAA;AAAA;AACpBM,YAAAA,KADoB;AAIpBC,YAAAA,QAJoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASA,eAAeL,KAAf",
        "sourcesContent": [
            "// index.js\nimport Link from 'next/link'\nimport groq from 'groq'\nimport client from '../client'\n\nconst Index = (props) => {\n  console.log(props)\n    const { posts = [] } = props\n    const { projects = [] } = props\n    return (\n      <div>\n        <h1>Posts</h1>\n        {posts.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n              <li key={_id}>\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                  <a>{title}</a>\n                </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n              </li>\n            )\n        )}\n        <h1>Projects</h1>\n        {projects.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n              <li key={_id}>\n                <Link href=\"/project/[slug]\" as={`/project/${slug.current}`}>\n                  <a>{title}</a>\n                </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n              </li>\n            )\n        )}\n      </div>\n    )\n}\n\nIndex.getInitialProps = async () => ({\n    posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n    projects: await client.fetch(groq`\n      *[_type == \"project\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n})\n\nexport default Index"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
