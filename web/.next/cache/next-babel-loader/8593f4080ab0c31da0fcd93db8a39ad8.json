{
    "ast": null,
    "code": "import _regeneratorRuntime from \"/Users/dan/Documents/Coding/blog/web/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/dan/Documents/Coding/blog/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/dan/Documents/Coding/blog/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dan/Documents/Coding/blog/web/pages/index.js\",\n    _this = this;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"project\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"post\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// index.js\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\nimport React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nvar Index = function Index(props) {\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts;\n  var _props$projects = props.projects,\n      projects = _props$projects === void 0 ? [] : _props$projects;\n  var postLinks = posts.map(function (_ref) {\n    var _id = _ref._id,\n        _ref$title = _ref.title,\n        title = _ref$title === void 0 ? \"\" : _ref$title,\n        _ref$slug = _ref.slug,\n        slug = _ref$slug === void 0 ? \"\" : _ref$slug,\n        _ref$_updatedAt = _ref._updatedAt,\n        _updatedAt = _ref$_updatedAt === void 0 ? \"\" : _ref$_updatedAt;\n\n    return slug && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/post/[slug]\",\n        as: \"/post/\".concat(slug.current),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, _this), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\"]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, _this);\n  });\n  var projectLinks = projects.map(function (_ref2) {\n    var _id = _ref2._id,\n        _ref2$title = _ref2.title,\n        title = _ref2$title === void 0 ? \"\" : _ref2$title,\n        _ref2$slug = _ref2.slug,\n        slug = _ref2$slug === void 0 ? \"\" : _ref2$slug,\n        _ref2$_updatedAt = _ref2._updatedAt,\n        _updatedAt = _ref2$_updatedAt === void 0 ? \"\" : _ref2$_updatedAt;\n\n    return slug && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/project/[slug]\",\n        as: \"/project/\".concat(slug.current),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, _this), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\"]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(ReactFullpage, {\n    scrollOverflow: true,\n    onLeave: function onLeave() {\n      return console.log(\"scroll\");\n    },\n    afterLoad: function afterLoad() {\n      return console.log(\"scroll\");\n    },\n    render: function render(_ref3) {\n      var fullpageApi = _ref3.fullpageApi;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          style: {\n            backgroundColor: \"red\"\n          },\n          children: projectLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          style: {\n            backgroundColor: \"blue\"\n          },\n          children: postLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          style: {\n            backgroundColor: \"purple\"\n          },\n          children: \"section 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          style: {\n            backgroundColor: \"yellow\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Section 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return fullpageApi.moveTo(1, 0);\n            },\n            children: \"Move top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(groq(_templateObject()));\n\n        case 2:\n          _context.t0 = _context.sent;\n          _context.next = 5;\n          return client.fetch(groq(_templateObject2()));\n\n        case 5:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0,\n            projects: _context.t1\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");",
    "map": {
        "version": 3,
        "sources": ["/Users/dan/Documents/Coding/blog/web/pages/index.js"],
        "names": [
            "Link",
            "groq",
            "client",
            "React",
            "ReactFullpage",
            "Index",
            "props",
            "posts",
            "projects",
            "postLinks",
            "map",
            "_id",
            "title",
            "slug",
            "_updatedAt",
            "current",
            "Date",
            "toDateString",
            "projectLinks",
            "console",
            "log",
            "fullpageApi",
            "backgroundColor",
            "moveTo",
            "getInitialProps",
            "fetch"
        ],
        "mappings": "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",
        "sourcesContent": [
            "// index.js\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\";\n\nimport React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nconst Index = (props) => {\n  const { posts = [] } = props;\n  const { projects = [] } = props;\n\n  const postLinks = posts.map(\n    ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n      slug && (\n        <li key={_id}>\n          <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n            <a>{title}</a>\n          </Link>{\" \"}\n          ({new Date(_updatedAt).toDateString()})\n        </li>\n      )\n  );\n\n  const projectLinks = projects.map(\n    ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n      slug && (\n        <li key={_id}>\n          <Link href=\"/project/[slug]\" as={`/project/${slug.current}`}>\n            <a>{title}</a>\n          </Link>{\" \"}\n          ({new Date(_updatedAt).toDateString()})\n        </li>\n      )\n  );\n\n  return (\n    <ReactFullpage\n      scrollOverflow={true}\n      onLeave={() => console.log(\"scroll\")}\n      afterLoad={() => console.log(\"scroll\")}\n      render={({ fullpageApi }) => {\n        return (\n          <div>\n            <div className=\"section\" style={{backgroundColor:\"red\"}}>{projectLinks}</div>\n            <div className=\"section\" style={{backgroundColor:\"blue\"}}>{postLinks}</div>\n            <div className=\"section\" style={{backgroundColor:\"purple\"}}>section 3</div>\n            <div className=\"section\" style={{backgroundColor:\"yellow\"}}>\n              <h3>Section 3</h3>\n              <button onClick={() => fullpageApi.moveTo(1, 0)}>Move top</button>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n  projects: await client.fetch(groq`\n      *[_type == \"project\" && publishedAt < now()]|order(publishedAt desc)\n    `),\n});\n\nexport default Index;\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
